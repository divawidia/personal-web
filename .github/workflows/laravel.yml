name: Laravel CI/CD with Docker

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-test:
    name: Build and Test Docker Image
    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: "8.2"
          extensions: mbstring, bcmath, sqlite, xml, curl, tokenizer, json
          coverage: none

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Node dependencies
        run: npm install

      - name: Build frontend assets
        run: npm run build

      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test

      - name: Build Docker image
        run: docker build -t divawidia-app:latest .

  deploy:
    name: Deploy to Azure VM
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SSH_HOST  }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            cd /var/www/laravel-app
            sudo git pull origin main
            sudo docker compose up -d --build
            sudo docker compose exec app php artisan optimize:clear
            sudo docker compose exec app php artisan config:cache
            sudo docker compose exec app php artisan route:cache
            sudo docker compose exec app php artisan view:cache
